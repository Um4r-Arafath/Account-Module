# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

stages:
  - stage: BuildAndPushDockerImages
    displayName: 'Build and Push Frontend Image to Docker Registry '
    jobs:
    - job: BuildAndPushFrontend
      pool:
        vmImage: ubuntu-latest
      steps:
      - task: Docker@2
        inputs:
          containerRegistry: 'Docker Registry'
          repository: 'umararafath/account-module-frontend'
          command: 'buildAndPush'
          Dockerfile: 'frontend/Dockerfile'

    - job: BuildAndPushBackend
      dependsOn: BuildAndPushFrontend
      displayName: 'Build and Push Backend Image to Docker Registry'
      pool:
        vmImage: ubuntu-latest
      steps:
      - task: Docker@2
        inputs:
          containerRegistry: 'Docker Registry'
          repository: 'umararafath/account-module-backend'
          command: 'buildAndPush'
          Dockerfile: 'backend/Dockerfile'

  - stage: PullAndRunDockerImages
    displayName: 'Pull Images from Docker Registry and Run it'
    jobs:
      - job: PullAndRunFrontendImage
        displayName: 'Pull and Run Frontend Image'
        pool: 
          name: practice-agent
        steps:
          - script: |
              sudo rm -f frontend-image
              sudo docker run -d -p 3000:3000 --name frontend-image umararafath/account-module-frontend:$(Build.BuildId)
  
      - job: PullAndRunBackendImage
        displayName: 'Pull and Run Backend Image'
        dependsOn: PullAndRunFrontendImage
        pool: 
          name: practice-agent
        steps:
          - script: |
              sudo rm -f backend-image
              sudo docker run -d -p 3001:3001 --name backend-image umararafath/account-module-backend:$(Build.BuildId)
              sudo docker image prune -a -f
              sudo docker ps
        

        